/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/metronic/js/pages/features/calendar/google.js":
/*!*****************************************************************!*\
  !*** ./resources/metronic/js/pages/features/calendar/google.js ***!
  \*****************************************************************/
/***/ (() => {

eval("\n\nvar KTCalendarGoogle = function () {\n  return {\n    //main function to initiate the module\n    init: function init() {\n      var calendarEl = document.getElementById('kt_calendar');\n      var calendar = new FullCalendar.Calendar(calendarEl, {\n        plugins: ['interaction', 'dayGrid', 'timeGrid', 'list', 'googleCalendar'],\n        isRTL: KTUtil.isRTL(),\n        header: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        },\n        displayEventTime: false,\n        // don't show the time column in list view\n        height: 800,\n        contentHeight: 780,\n        aspectRatio: 3,\n        // see: https://fullcalendar.io/docs/aspectRatio\n        views: {\n          dayGridMonth: {\n            buttonText: 'month'\n          },\n          timeGridWeek: {\n            buttonText: 'week'\n          },\n          timeGridDay: {\n            buttonText: 'day'\n          }\n        },\n        defaultView: 'dayGridMonth',\n        editable: true,\n        eventLimit: true,\n        // allow \"more\" link when too many events\n        navLinks: true,\n        // THIS KEY WON'T WORK IN PRODUCTION!!!\n        // To make your own Google API key, follow the directions here:\n        // http://fullcalendar.io/docs/google_calendar/\n        googleCalendarApiKey: 'AIzaSyDcnW6WejpTOCffshGDDb4neIrXVUA1EAE',\n        // US Holidays\n        events: 'en.usa#holiday@group.v.calendar.google.com',\n        eventClick: function eventClick(event) {\n          // opens events in a popup window\n          window.open(event.url, 'gcalevent', 'width=700,height=600');\n          return false;\n        },\n        loading: function loading(bool) {\n          return;\n          /*\n          KTApp.block(portlet.getSelf(), {\n              type: 'loader',\n              state: 'success',\n              message: 'Please wait...'\n          });\n          */\n        },\n        eventRender: function eventRender(info) {\n          var element = $(info.el);\n\n          if (info.event.extendedProps && info.event.extendedProps.description) {\n            if (element.hasClass('fc-day-grid-event')) {\n              element.data('content', info.event.extendedProps.description);\n              element.data('placement', 'top');\n              KTApp.initPopover(element);\n            } else if (element.hasClass('fc-time-grid-event')) {\n              element.find('.fc-title').append('<div class=\"fc-description\">' + info.event.extendedProps.description + '</div>');\n            } else if (element.find('.fc-list-item-title').lenght !== 0) {\n              element.find('.fc-list-item-title').append('<div class=\"fc-description\">' + info.event.extendedProps.description + '</div>');\n            }\n          }\n        }\n      });\n      calendar.render();\n    }\n  };\n}();\n\njQuery(document).ready(function () {\n  KTCalendarGoogle.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/features/calendar/google.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/metronic/js/pages/features/calendar/google.js"]();
/******/ 	
/******/ })()
;