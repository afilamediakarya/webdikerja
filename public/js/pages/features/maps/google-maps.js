/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/metronic/js/pages/features/maps/google-maps.js":
/*!******************************************************************!*\
  !*** ./resources/metronic/js/pages/features/maps/google-maps.js ***!
  \******************************************************************/
/***/ (() => {

eval(" // Class definition\n\nvar KTGoogleMapsDemo = function () {\n  // Private functions\n  var demo1 = function demo1() {\n    var map = new GMaps({\n      div: '#kt_gmap_1',\n      lat: -12.043333,\n      lng: -77.028333\n    });\n  };\n\n  var demo2 = function demo2() {\n    var map = new GMaps({\n      div: '#kt_gmap_2',\n      zoom: 16,\n      lat: -12.043333,\n      lng: -77.028333,\n      click: function click(e) {\n        alert('click');\n      },\n      dragend: function dragend(e) {\n        alert('dragend');\n      }\n    });\n  };\n\n  var demo3 = function demo3() {\n    var map = new GMaps({\n      div: '#kt_gmap_3',\n      lat: -51.38739,\n      lng: -6.187181\n    });\n    map.addMarker({\n      lat: -51.38739,\n      lng: -6.187181,\n      title: 'Lima',\n      details: {\n        database_id: 42,\n        author: 'HPNeo'\n      },\n      click: function click(e) {\n        if (console.log) console.log(e);\n        alert('You clicked in this marker');\n      }\n    });\n    map.addMarker({\n      lat: -12.042,\n      lng: -77.028333,\n      title: 'Marker with InfoWindow',\n      infoWindow: {\n        content: '<span style=\"color:#000\">HTML Content!</span>'\n      }\n    });\n    map.setZoom(5);\n  };\n\n  var demo4 = function demo4() {\n    var map = new GMaps({\n      div: '#kt_gmap_4',\n      lat: -12.043333,\n      lng: -77.028333\n    });\n    GMaps.geolocate({\n      success: function success(position) {\n        map.setCenter(position.coords.latitude, position.coords.longitude);\n      },\n      error: function error(_error) {\n        alert('Geolocation failed: ' + _error.message);\n      },\n      not_supported: function not_supported() {\n        alert(\"Your browser does not support geolocation\");\n      },\n      always: function always() {//alert(\"Geolocation Done!\");\n      }\n    });\n  };\n\n  var demo5 = function demo5() {\n    var map = new GMaps({\n      div: '#kt_gmap_5',\n      lat: -12.043333,\n      lng: -77.028333,\n      click: function click(e) {\n        console.log(e);\n      }\n    });\n    var path = [[-12.044012922866312, -77.02470665341184], [-12.05449279282314, -77.03024273281858], [-12.055122327623378, -77.03039293652341], [-12.075917129727586, -77.02764635449216], [-12.07635776902266, -77.02792530422971], [-12.076819390363665, -77.02893381481931], [-12.088527520066453, -77.0241058385925], [-12.090814532191756, -77.02271108990476]];\n    map.drawPolyline({\n      path: path,\n      strokeColor: '#131540',\n      strokeOpacity: 0.6,\n      strokeWeight: 6\n    });\n  };\n\n  var demo6 = function demo6() {\n    var map = new GMaps({\n      div: '#kt_gmap_6',\n      lat: -12.043333,\n      lng: -77.028333\n    });\n    var path = [[-12.040397656836609, -77.03373871559225], [-12.040248585302038, -77.03993927003302], [-12.050047116528843, -77.02448169303511], [-12.044804866577001, -77.02154422636042]];\n    var polygon = map.drawPolygon({\n      paths: path,\n      strokeColor: '#BBD8E9',\n      strokeOpacity: 1,\n      strokeWeight: 3,\n      fillColor: '#BBD8E9',\n      fillOpacity: 0.6\n    });\n  };\n\n  var demo7 = function demo7() {\n    var map = new GMaps({\n      div: '#kt_gmap_7',\n      lat: -12.043333,\n      lng: -77.028333\n    });\n    $('#kt_gmap_7_btn').click(function (e) {\n      e.preventDefault();\n      KTUtil.scrollTo('kt_gmap_7_btn', 400);\n      map.travelRoute({\n        origin: [-12.044012922866312, -77.02470665341184],\n        destination: [-12.090814532191756, -77.02271108990476],\n        travelMode: 'driving',\n        step: function step(e) {\n          $('#kt_gmap_7_routes').append('<li>' + e.instructions + '</li>');\n          $('#kt_gmap_7_routes li:eq(' + e.step_number + ')').delay(800 * e.step_number).fadeIn(500, function () {\n            map.setCenter(e.end_location.lat(), e.end_location.lng());\n            map.drawPolyline({\n              path: e.path,\n              strokeColor: '#131540',\n              strokeOpacity: 0.6,\n              strokeWeight: 6\n            });\n          });\n        }\n      });\n    });\n  };\n\n  var demo8 = function demo8() {\n    var map = new GMaps({\n      div: '#kt_gmap_8',\n      lat: -12.043333,\n      lng: -77.028333\n    });\n\n    var handleAction = function handleAction() {\n      var text = $.trim($('#kt_gmap_8_address').val());\n      GMaps.geocode({\n        address: text,\n        callback: function callback(results, status) {\n          if (status == 'OK') {\n            var latlng = results[0].geometry.location;\n            map.setCenter(latlng.lat(), latlng.lng());\n            map.addMarker({\n              lat: latlng.lat(),\n              lng: latlng.lng()\n            });\n            KTUtil.scrollTo('kt_gmap_8');\n          }\n        }\n      });\n    };\n\n    $('#kt_gmap_8_btn').click(function (e) {\n      e.preventDefault();\n      handleAction();\n    });\n    $(\"#kt_gmap_8_address\").keypress(function (e) {\n      var keycode = e.keyCode ? e.keyCode : e.which;\n\n      if (keycode == '13') {\n        e.preventDefault();\n        handleAction();\n      }\n    });\n  };\n\n  return {\n    // public functions\n    init: function init() {\n      // default charts\n      demo1();\n      demo2();\n      demo3();\n      demo4();\n      demo5();\n      demo6();\n      demo7();\n      demo8();\n    }\n  };\n}();\n\njQuery(document).ready(function () {\n  KTGoogleMapsDemo.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/features/maps/google-maps.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/metronic/js/pages/features/maps/google-maps.js"]();
/******/ 	
/******/ })()
;