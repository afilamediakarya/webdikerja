/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/metronic/js/pages/crud/forms/widgets/bootstrap-daterangepicker.js":
/*!*************************************************************************************!*\
  !*** ./resources/metronic/js/pages/crud/forms/widgets/bootstrap-daterangepicker.js ***!
  \*************************************************************************************/
/***/ (() => {

eval("// Class definition\nvar KTBootstrapDaterangepicker = function () {\n  // Private functions\n  var demos = function demos() {\n    // minimum setup\n    $('#kt_daterangepicker_1, #kt_daterangepicker_1_modal').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-secondary'\n    }); // input group and left alignment setup\n\n    $('#kt_daterangepicker_2').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-secondary'\n    }, function (start, end, label) {\n      $('#kt_daterangepicker_2 .form-control').val(start.format('YYYY-MM-DD') + ' / ' + end.format('YYYY-MM-DD'));\n    });\n    $('#kt_daterangepicker_2_modal').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-secondary'\n    }, function (start, end, label) {\n      $('#kt_daterangepicker_2 .form-control').val(start.format('YYYY-MM-DD') + ' / ' + end.format('YYYY-MM-DD'));\n    }); // left alignment setup\n\n    $('#kt_daterangepicker_3').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-secondary'\n    }, function (start, end, label) {\n      $('#kt_daterangepicker_3 .form-control').val(start.format('YYYY-MM-DD') + ' / ' + end.format('YYYY-MM-DD'));\n    });\n    $('#kt_daterangepicker_3_modal').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-secondary'\n    }, function (start, end, label) {\n      $('#kt_daterangepicker_3 .form-control').val(start.format('YYYY-MM-DD') + ' / ' + end.format('YYYY-MM-DD'));\n    }); // date & time\n\n    $('#kt_daterangepicker_4').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-secondary',\n      timePicker: true,\n      timePickerIncrement: 30,\n      locale: {\n        format: 'MM/DD/YYYY h:mm A'\n      }\n    }, function (start, end, label) {\n      $('#kt_daterangepicker_4 .form-control').val(start.format('MM/DD/YYYY h:mm A') + ' / ' + end.format('MM/DD/YYYY h:mm A'));\n    }); // date picker\n\n    $('#kt_daterangepicker_5').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-secondary',\n      singleDatePicker: true,\n      showDropdowns: true,\n      locale: {\n        format: 'MM/DD/YYYY'\n      }\n    }, function (start, end, label) {\n      $('#kt_daterangepicker_5 .form-control').val(start.format('MM/DD/YYYY') + ' / ' + end.format('MM/DD/YYYY'));\n    }); // predefined ranges\n\n    var start = moment().subtract(29, 'days');\n    var end = moment();\n    $('#kt_daterangepicker_6').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-secondary',\n      startDate: start,\n      endDate: end,\n      ranges: {\n        'Today': [moment(), moment()],\n        'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n        'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n        'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n        'This Month': [moment().startOf('month'), moment().endOf('month')],\n        'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n      }\n    }, function (start, end, label) {\n      $('#kt_daterangepicker_6 .form-control').val(start.format('MM/DD/YYYY') + ' / ' + end.format('MM/DD/YYYY'));\n    });\n  };\n\n  var validationDemos = function validationDemos() {\n    // input group and left alignment setup\n    $('#kt_daterangepicker_1_validate').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-secondary'\n    }, function (start, end, label) {\n      $('#kt_daterangepicker_1_validate .form-control').val(start.format('YYYY-MM-DD') + ' / ' + end.format('YYYY-MM-DD'));\n    }); // input group and left alignment setup\n\n    $('#kt_daterangepicker_2_validate').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-secondary'\n    }, function (start, end, label) {\n      $('#kt_daterangepicker_3_validate .form-control').val(start.format('YYYY-MM-DD') + ' / ' + end.format('YYYY-MM-DD'));\n    }); // input group and left alignment setup\n\n    $('#kt_daterangepicker_3_validate').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-secondary'\n    }, function (start, end, label) {\n      $('#kt_daterangepicker_3_validate .form-control').val(start.format('YYYY-MM-DD') + ' / ' + end.format('YYYY-MM-DD'));\n    });\n  };\n\n  return {\n    // public functions\n    init: function init() {\n      demos();\n      validationDemos();\n    }\n  };\n}();\n\njQuery(document).ready(function () {\n  KTBootstrapDaterangepicker.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/crud/forms/widgets/bootstrap-daterangepicker.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/metronic/js/pages/crud/forms/widgets/bootstrap-daterangepicker.js"]();
/******/ 	
/******/ })()
;