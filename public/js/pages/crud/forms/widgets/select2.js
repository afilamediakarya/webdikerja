/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/metronic/js/pages/crud/forms/widgets/select2.js":
/*!*******************************************************************!*\
  !*** ./resources/metronic/js/pages/crud/forms/widgets/select2.js ***!
  \*******************************************************************/
/***/ (() => {

eval("// Class definition\nvar KTSelect2 = function () {\n  // Private functions\n  var demos = function demos() {\n    // basic\n    $('#kt_select2_1, #kt_select2_1_validate').select2({\n      placeholder: 'Select a state'\n    }); // nested\n\n    $('#kt_select2_2, #kt_select2_2_validate').select2({\n      placeholder: 'Select a state'\n    }); // multi select\n\n    $('#kt_select2_3, #kt_select2_3_validate').select2({\n      placeholder: 'Select a state'\n    }); // basic\n\n    $('#kt_select2_4').select2({\n      placeholder: \"Select a state\",\n      allowClear: true\n    }); // loading data from array\n\n    var data = [{\n      id: 0,\n      text: 'Enhancement'\n    }, {\n      id: 1,\n      text: 'Bug'\n    }, {\n      id: 2,\n      text: 'Duplicate'\n    }, {\n      id: 3,\n      text: 'Invalid'\n    }, {\n      id: 4,\n      text: 'Wontfix'\n    }];\n    $('#kt_select2_5').select2({\n      placeholder: \"Select a value\",\n      data: data\n    }); // loading remote data\n\n    function formatRepo(repo) {\n      if (repo.loading) return repo.text;\n      var markup = \"<div class='select2-result-repository clearfix'>\" + \"<div class='select2-result-repository__meta'>\" + \"<div class='select2-result-repository__title'>\" + repo.full_name + \"</div>\";\n\n      if (repo.description) {\n        markup += \"<div class='select2-result-repository__description'>\" + repo.description + \"</div>\";\n      }\n\n      markup += \"<div class='select2-result-repository__statistics'>\" + \"<div class='select2-result-repository__forks'><i class='fa fa-flash'></i> \" + repo.forks_count + \" Forks</div>\" + \"<div class='select2-result-repository__stargazers'><i class='fa fa-star'></i> \" + repo.stargazers_count + \" Stars</div>\" + \"<div class='select2-result-repository__watchers'><i class='fa fa-eye'></i> \" + repo.watchers_count + \" Watchers</div>\" + \"</div>\" + \"</div></div>\";\n      return markup;\n    }\n\n    function formatRepoSelection(repo) {\n      return repo.full_name || repo.text;\n    }\n\n    $(\"#kt_select2_6\").select2({\n      placeholder: \"Search for git repositories\",\n      allowClear: true,\n      ajax: {\n        url: \"https://api.github.com/search/repositories\",\n        dataType: 'json',\n        delay: 250,\n        data: function data(params) {\n          return {\n            q: params.term,\n            // search term\n            page: params.page\n          };\n        },\n        processResults: function processResults(data, params) {\n          // parse the results into the format expected by Select2\n          // since we are using custom formatting functions we do not need to\n          // alter the remote JSON data, except to indicate that infinite\n          // scrolling can be used\n          params.page = params.page || 1;\n          return {\n            results: data.items,\n            pagination: {\n              more: params.page * 30 < data.total_count\n            }\n          };\n        },\n        cache: true\n      },\n      escapeMarkup: function escapeMarkup(markup) {\n        return markup;\n      },\n      // let our custom formatter work\n      minimumInputLength: 1,\n      templateResult: formatRepo,\n      // omitted for brevity, see the source of this page\n      templateSelection: formatRepoSelection // omitted for brevity, see the source of this page\n\n    }); // custom styles\n    // tagging support\n\n    $('#kt_select2_12_1, #kt_select2_12_2, #kt_select2_12_3, #kt_select2_12_4').select2({\n      placeholder: \"Select an option\"\n    }); // disabled mode\n\n    $('#kt_select2_7').select2({\n      placeholder: \"Select an option\"\n    }); // disabled results\n\n    $('#kt_select2_8').select2({\n      placeholder: \"Select an option\"\n    }); // limiting the number of selections\n\n    $('#kt_select2_9').select2({\n      placeholder: \"Select an option\",\n      maximumSelectionLength: 2\n    }); // hiding the search box\n\n    $('#kt_select2_10').select2({\n      placeholder: \"Select an option\",\n      minimumResultsForSearch: Infinity\n    }); // tagging support\n\n    $('#kt_select2_11').select2({\n      placeholder: \"Add a tag\",\n      tags: true\n    }); // disabled results\n\n    $('.kt-select2-general').select2({\n      placeholder: \"Select an option\"\n    });\n  };\n\n  var modalDemos = function modalDemos() {\n    $('#kt_select2_modal').on('shown.bs.modal', function () {\n      // basic\n      $('#kt_select2_1_modal').select2({\n        placeholder: \"Select a state\"\n      }); // nested\n\n      $('#kt_select2_2_modal').select2({\n        placeholder: \"Select a state\"\n      }); // multi select\n\n      $('#kt_select2_3_modal').select2({\n        placeholder: \"Select a state\"\n      }); // basic\n\n      $('#kt_select2_4_modal').select2({\n        placeholder: \"Select a state\",\n        allowClear: true\n      });\n    });\n  }; // Public functions\n\n\n  return {\n    init: function init() {\n      demos();\n      modalDemos();\n    }\n  };\n}(); // Initialization\n\n\njQuery(document).ready(function () {\n  KTSelect2.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/crud/forms/widgets/select2.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/metronic/js/pages/crud/forms/widgets/select2.js"]();
/******/ 	
/******/ })()
;